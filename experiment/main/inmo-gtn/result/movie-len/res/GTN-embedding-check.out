>>SEED: 2020
====================================================
loading [./data/movie-len]
====================================================
63639 interactions for training
16361 interactions for testing
movie-len Sparsity : 0.050407386194299054
movie-len is ready to go
===========config================
{'A_n_fold': 100,
 'A_split': False,
 'K': 3,
 'args': Namespace(K=3, a_fold=100, alpha=0.3, alpha1=0.25, alpha2=0.25, avg=0, beta=0.5, bpr_batch=256, comment='gtn', dataset='movie-len', debug=True, decay=0, dropout=0, epochs=1000, gamma=1, gcn_model='GTN', gpu_id=0, incnorm_para=True, keepprob=0.6, lambda2=4.0, layer=3, load=0, lr=0.001, model='gtn', multicore=1, ogb=True, path='./checkpoints', pretrain=0, prop_dropout=0.1, recdim=64, seed=2020, tensorboard=0, testbatch=30, topks='[20]'),
 'bigdata': False,
 'bpr_batch_size': 256,
 'dataset': 'movie-len',
 'decay': 0,
 'dropout': 0,
 'epochs': 1000,
 'keep_prob': 0.6,
 'lambda2': 4.0,
 'latent_dim_rec': 64,
 'lr': 0.001,
 'multicore': 1,
 'pretrain': 0,
 'test_u_batch_size': 30}
cores for test: 24
comment: gtn
tensorboard: 0
LOAD: 0
Weight path: ./checkpoints
Test Topks: [20]
using bpr loss
===========end===================
loading adjacency matrix
successfully loaded...
lgn is already to go(dropout:0)
====================================================
not enable tensorflowboard
====================================================
Namespace(K=3, a_fold=100, alpha=0.3, alpha1=0.25, alpha2=0.25, avg=0, beta=0.5, bpr_batch=256, comment='gtn', dataset='movie-len', debug=True, decay=0, dropout=0, epochs=1000, gamma=1, gcn_model='GTN', gpu_id=0, incnorm_para=True, keepprob=0.6, lambda2=4.0, layer=3, load=0, lr=0.001, model='gtn', multicore=1, ogb=True, path='./checkpoints', pretrain=0, prop_dropout=0.1, recdim=64, seed=2020, tensorboard=0, testbatch=30, topks='[20]')


[feat_mat의 인덱스 확인]
tensor([2577, 2578, 2578, 2579, 2580, 2581, 2581, 2582, 2582, 2582, 2583, 2583,
        2584, 2585, 2585, 2586, 2586, 2586, 2586, 2586, 2587, 2587, 2587, 2588,
        2588, 2589, 2589, 2589, 2590, 2591, 2591, 2592, 2592, 2593, 2594, 2595,
        2595, 2595, 2596, 2596, 2597, 2598, 2598, 2599, 2599, 2600, 2600, 2601,
        2601, 2601, 2601, 2602, 2602, 2603, 2603, 2604, 2604, 2605, 2605, 2605,
        2606, 2606, 2607, 2607, 2607, 2607, 2608, 2608, 2609, 2609, 2610, 2610,
        2611, 2611, 2612, 2612, 2613, 2613, 2614, 2614, 2615, 2615, 2615, 2616,
        2616, 2617, 2617, 2618, 2618, 2619, 2620, 2620, 2621, 2621, 2622, 2623,
        2624, 2624, 2625, 2625], device='cuda:0')
tensor([2627,  654, 2627, 2627, 2627,  654, 2627,  654,  917, 2627,  654, 2627,
        2627,  706, 2627,  654,  698,  781,  900, 2627,  654,  781, 2627,  654,
        2627,  654,  827, 2627, 2627,  654, 2627,  654, 2627, 2627, 2627,  755,
         781, 2627,  674, 2627, 2627,  681, 2627,  882, 2627,  726, 2627,  732,
         781,  893, 2627,  746, 2627,  746, 2627,  750, 2627,  761,  781, 2627,
         781, 2627,  781,  838,  879, 2627,  781, 2627,  781, 2627,  781, 2627,
         781, 2627,  781, 2627,  781, 2627,  786, 2627,  827,  895, 2627,  834,
        2627,  839, 2627,  850, 2627, 2627,  853, 2627,  862, 2627, 2627, 2627,
         895, 2627,  915, 2627], device='cuda:0')





[norm_adj의 연결 관계 확인]
tensor([2553, 2553, 2554, 2554, 2555, 2555, 2555, 2555, 2556, 2557, 2558, 2558,
        2558, 2558, 2558, 2558, 2559, 2560, 2560, 2561, 2563, 2563, 2563, 2563,
        2563, 2563, 2563, 2563, 2564, 2565, 2565, 2565, 2566, 2566, 2566, 2567,
        2568, 2569, 2570, 2571, 2571, 2571, 2572, 2573, 2574, 2574, 2575, 2576,
        2577, 2578, 2581, 2582, 2582, 2583, 2585, 2586, 2586, 2586, 2586, 2587,
        2587, 2588, 2589, 2589, 2591, 2592, 2595, 2595, 2596, 2598, 2599, 2600,
        2601, 2601, 2601, 2602, 2603, 2604, 2605, 2605, 2606, 2607, 2607, 2607,
        2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2615, 2616, 2617, 2618,
        2620, 2621, 2624, 2625], device='cuda:0')
tensor([643, 781, 485, 781, 488, 518, 616, 919, 488, 495, 496, 698, 748, 803,
        806, 851, 499, 518, 723, 527, 549, 551, 591, 643, 673, 781, 879, 900,
        550, 564, 827, 895, 584, 591, 654, 586, 586, 647, 649, 654, 674, 832,
        654, 654, 654, 746, 654, 654, 654, 654, 654, 654, 917, 654, 706, 654,
        698, 781, 900, 654, 781, 654, 654, 827, 654, 654, 755, 781, 674, 681,
        882, 726, 732, 781, 893, 746, 746, 750, 761, 781, 781, 781, 838, 879,
        781, 781, 781, 781, 781, 781, 786, 827, 895, 834, 839, 850, 853, 862,
        895, 915], device='cuda:0')



[간선 가중치 확인]
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
